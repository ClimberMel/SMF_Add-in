<html>
<head>
    <title>smfWord() -- Documentation</title>
    <style>
        table {
            width: 100%;
            margin-left:40px
        }
        p {
            margin-left:40px
        }
        td {
            vertical-align: top;
        }
    </style>
</head>

<body>
    <h1>Documentation for smfWord() function</h1>

    <h3><u>Description</u></h3>
        <p style="margin-left:40px">
            A utility function to extract nth word from a string using a delimiter.
        </p>

    <h3><u>Syntax</u></h3>
        <p>
            <b>=smfWord(Haystack, Occurrence, [Delimiter], [Convert], [Reverse])</b>
        </p>
        
    <h3><u>Parameters</u></h3>
    <table>
        <tr>
            <td style="width:10%"><b>Haystack</b></td>
            <td style="width:5%">=</td>
            <td style="width:85%">String to extract the word from.</td>
        </tr>
        <tr>
            <td><b>Occurance</b></td>
            <td>=</td>
            <td>The nth word found surrounded by the delimiter.</td>
        </tr>
        <tr>
            <td><b>Delimiter</b></td>
            <td>=</td>
            <td>Optional - Default is “ ”.  String to delimit the Haystack into words.  If a zero-length string is used; i.e., “”, Haystack will be returned.</td>
        </tr>
        <tr>
            <td><b>Convert</b></td>
            <td>=</td>
            <td>Optional - Default is 0.  If set to 1, function will attempt to convert the substring to a numeric value, for example convert “50K” to “50000”.</td>
        </tr>
        <tr>
            <td><b>Reverse</b></td>
            <td>=</td>
            <td>Optional - Default is 0.  If set to 1, function will retrieve the substring starting at the end of Haystack and work backwards.</td>
        </tr>
    </table>
    <br>
    <h3><u>Examples</u></h3>
    <ul>
        <li>To extract the 3<sup>rd</sup>
            word from "apples - oranges - bananas - grapes", use: =smfWord("apples - oranges - bananas - grapes", 3, "-") ... giving
            “ bananas ” including the surrounding spaces.</li>
        <br>
        <li>To extract the 2<sup>nd</sup> 
			word from "apples - oranges - bananas - grapes", use: =smfWord("apples - oranges - bananas - grapes", 2, " - ")  ... giving 
			“oranges”; the delimiter includes spaces.</li>
        <br>
        <li>To extract the 3<sup>rd</sup> word from "Accounts Receivables: 700K", use: =smfWord("Accounts Receivables: 700K", 3, , 1)  
            ... giving “700000” using the Convert parameter.</li>
        <br>
        <li>To extract the last word from "apples - oranges - bananas - grapes", use: =smfWord("apples - oranges - bananas - grapes", 1, , , 1) ... giving “grapes”.</li>
    </ul>

    <h3><u>Usage notes</u></h3>
    <ul>
        <li>None at this time. 
        </li>
        <br>
    </ul>
</body>
</html>
